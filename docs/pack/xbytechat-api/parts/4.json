{
  "name": "xbytechat-api",
  "part": 4,
  "of": 6,
  "generatedAt": "2025-08-11 18:04:10 +00:00",
  "files": [
    {
      "path": "xbytechat-api/Migrations/20250619125804_AddUserFeatureAccessTable.Designer.cs",
      "sha256": "1d005047673d716dd27c18c687f8ab3ebdb72c7a26a3529ddd81185f88de0866",
      "language": "csharp",
      "size": 107768,
      "content": "// <auto-generated />\nusing System;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Migrations;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\nusing Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;\nusing xbytechat.api;\n\n#nullable disable\n\nnamespace xbytechat.api.Migrations\n{\n    [DbContext(typeof(AppDbContext))]\n    [Migration(\"20250619125804_AddUserFeatureAccessTable\")]\n    partial class AddUserFeatureAccessTable\n    {\n        /// <inheritdoc />\n        protected override void BuildTargetModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder\n                .HasAnnotation(\"ProductVersion\", \"8.0.15\")\n                .HasAnnotation(\"Relational:MaxIdentifierLength\", 63);\n\n            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);\n\n            modelBuilder.Entity(\"ContactTag\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"TagId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"TagId\");\n\n                    b.ToTable(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"MessageLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTAFlowStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsIncoming\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MediaUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageContent\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RawResponse\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RecipientNumber\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"RefMessageId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RenderedBody\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.ToTable(\"MessageLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Email\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"PasswordHash\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"RoleId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"RoleId\");\n\n                    b.ToTable(\"Users\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"AssignedAgentId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Email\")\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<string>(\"Group\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsArchived\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsAutomationPaused\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsFavorite\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastCTAInteraction\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LastCTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"LastClickedProductId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"LastContactedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LeadSource\")\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<DateTime?>(\"NextFollowUpAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasMaxLength(500)\n                        .HasColumnType(\"character varying(500)\");\n\n                    b.Property<string>(\"PhoneNumber\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.Property<string>(\"Tags\")\n                        .HasMaxLength(200)\n                        .HasColumnType(\"character varying(200)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.ToTable(\"Contacts\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Note\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Content\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"EditedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsInternal\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsPinned\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Notes\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Reminder\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"CompletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"DueAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRecurring\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"LastCTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"LastClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LinkedCampaign\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int?>(\"Priority\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"RecurrencePattern\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ReminderType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"SendWhatsappNotification\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Reminders\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Tag\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Category\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ColorHex\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsSystemTag\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastUsedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Tags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Permission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Code\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Group\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Permissions\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            Code = \"dashboard.view\",\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1484),\n                            Description = \"Permission for dashboard.view\",\n                            IsActive = true,\n                            Name = \"dashboard.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                            Code = \"campaign.view\",\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1496),\n                            Description = \"Permission for campaign.view\",\n                            IsActive = true,\n                            Name = \"campaign.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                            Code = \"campaign.create\",\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1500),\n                            Description = \"Permission for campaign.create\",\n                            IsActive = true,\n                            Name = \"campaign.create\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                            Code = \"campaign.delete\",\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1504),\n                            Description = \"Permission for campaign.delete\",\n                            IsActive = true,\n                            Name = \"campaign.delete\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                            Code = \"product.view\",\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1507),\n                            Description = \"Permission for product.view\",\n                            IsActive = true,\n                            Name = \"product.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                            Code = \"product.create\",\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1513),\n                            Description = \"Permission for product.create\",\n                            IsActive = true,\n                            Name = \"product.create\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                            Code = \"product.delete\",\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1516),\n                            Description = \"Permission for product.delete\",\n                            IsActive = true,\n                            Name = \"product.delete\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            Code = \"contacts.view\",\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1520),\n                            Description = \"Permission for contacts.view\",\n                            IsActive = true,\n                            Name = \"contacts.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                            Code = \"tags.edit\",\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1524),\n                            Description = \"Permission for tags.edit\",\n                            IsActive = true,\n                            Name = \"tags.edit\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                            Code = \"admin.business.approve\",\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1544),\n                            Description = \"Permission for admin.business.approve\",\n                            IsActive = true,\n                            Name = \"admin.business.approve\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                            Code = \"admin.logs.view\",\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1547),\n                            Description = \"Permission for admin.logs.view\",\n                            IsActive = true,\n                            Name = \"admin.logs.view\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Plan\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Code\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Plans\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.PlanPermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"PlanId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"PlanId\");\n\n                    b.ToTable(\"PlanPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Role\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsSystemDefined\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Roles\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(346),\n                            Description = \"Super Admin\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"admin\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000002\"),\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(350),\n                            Description = \"Business Partner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"partner\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000003\"),\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(352),\n                            Description = \"Reseller Partner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"reseller\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000004\"),\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(354),\n                            Description = \"Business Owner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"business\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000005\"),\n                            CreatedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(356),\n                            Description = \"Staff\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"staff\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.RolePermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRevoked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"RoleId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"RoleId\");\n\n                    b.ToTable(\"RolePermissions\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"cf24b7f5-1cd6-4a11-ae7d-6cf51ef639b4\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1934),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"eaea5537-8ed7-4503-aa6e-e7d5e8cff0bb\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1955),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"d93c4342-cb14-4ca7-a8f5-8b48689cb9d5\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1961),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"5974390a-3569-4e81-844a-eef6252ef7e4\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1966),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"3ac31a18-ad13-4c36-b48b-809df1accbea\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1987),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"096be258-50ae-4078-b0b8-c26a084fd724\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1993),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"e7be4659-3d78-46ee-ada0-d8daf6dfc315\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1998),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"3ae5fc4a-1802-4e1d-88e1-1a18ec723c68\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2003),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"e6bbb9ea-c7c5-46ec-a174-89321cb049f4\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2058),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"81b8d4c8-6ce9-45b4-8edf-420e9e7cc508\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2065),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"3b73270a-83ea-4035-bc71-afcd2712b655\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2069),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"252166cd-7af1-4e13-9307-d49d67174ca0\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2084),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"ab889393-3213-491e-9a14-22ed8d5e2ec9\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2093),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"f793d715-08c4-4660-bb72-79c135d915fa\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2099),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"0fd99a93-afb1-4c95-bd45-6cac60d66c95\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2113),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"4a1d7dea-8658-4b83-ab55-3fa7d44acfca\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2123),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000005\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"58bc10ee-9c29-43f1-91ae-b47c230c074c\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2129),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000005\")\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.UserPermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsGranted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRevoked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AuditTrail.Models.AuditLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ActionType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IPAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Location\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"PerformedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"PerformedByUserName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RoleAtTime\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserAgent\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AuditLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"EdgesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AutoReplyFlows\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowEdge\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"SourceHandle\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SourceNodeId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TargetHandle\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TargetNodeId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyFlowEdges\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowNode\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ConfigJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Label\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodeType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Order\")\n                        .HasColumnType(\"integer\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyFlowNodes\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FlowName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ReplyContent\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"TriggeredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AutoReplyLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyRule\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FlowName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MediaUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Priority\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"ReplyMessage\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyRules\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.BusinessModule.Models.Business\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Address\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ApprovedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ApprovedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"BusinessEmail\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"BusinessName\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CompanyName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CompanyPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CreatedByPartnerId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeletedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Industry\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsApproved\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastLoginAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LogoUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Phone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RepresentativeName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Status\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Tags\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Website\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Businesses\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FlowName\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsPublished\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CTAFlowConfigs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<float?>(\"PositionX\")\n                        .HasColumnType(\"real\");\n\n                    b.Property<float?>(\"PositionY\")\n                        .HasColumnType(\"real\");\n\n                    b.Property<string>(\"RequiredSource\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RequiredTag\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"StepOrder\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"TemplateToSend\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CTAFlowConfigId\");\n\n                    b.ToTable(\"CTAFlowSteps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowButtonLink\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonSubType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonValue\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"CTAFlowStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"NextStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CTAFlowStepId\");\n\n                    b.ToTable(\"FlowButtonLinks\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowExecutionLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ContactPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"ExecutedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RawResponse\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"StepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"StepName\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"Success\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"TrackingLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"TriggeredByButton\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"FlowExecutionLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAManagement.Models.CTADefinition\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"TargetUrl\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CTADefinitions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CampaignType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CtaId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeletedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FollowUpTemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageCaption\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessageBody\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageTemplate\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ScheduledAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"SourceCampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateParameters\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CtaId\");\n\n                    b.HasIndex(\"SourceCampaignId\");\n\n                    b.ToTable(\"Campaigns\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignButton\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"IsFromTemplate\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<int>(\"Position\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Type\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Value\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.ToTable(\"CampaignButtons\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignFlowOverride\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"OverrideNextTemplate\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.ToTable(\"CampaignFlowOverrides\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"BotId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CategoryBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ClickedCTA\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"IsAutoTagged\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessagePreview\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProductBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.ToTable(\"CampaignRecipients\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"AllowRetry\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Browser\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"City\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ClickType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Country\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"DeliveredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeviceInfo\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"DeviceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IpAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsClicked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastRetryAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LastRetryStatus\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MacAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageBody\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"ReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"RecipientId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<int>(\"RetryCount\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"SendStatus\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"SourceChannel\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"MessageLogId\");\n\n                    b.HasIndex(\"RecipientId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"CampaignSendLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Catalog.Models.CatalogClickLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"BotId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAJourney\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CategoryBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CtaId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"LastInteractionType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"PlanSnapshot\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProductBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ProductId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RefMessageId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CatalogClickLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Catalog.Models.Product\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Currency\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageUrl\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"MostClickedCTA\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<decimal>(\"Price\")\n                        .HasColumnType(\"numeric\");\n\n                    b.Property<int>(\"TotalClicks\")\n                        .HasColumnType(\"integer\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Products\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.FeatureAccessModule.Models.FeatureAccess\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\", \"FeatureName\")\n                        .IsUnique();\n\n                    b.ToTable(\"FeatureAccess\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.FeatureAccessModule.Models.UserFeatureAccess\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid?>(\"ModifiedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"UserFeatureAccess\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Inbox.Models.ChatSessionState\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"LastUpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Mode\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UpdatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"ChatSessionStates\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Inbox.Models.ContactRead\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"LastReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ContactId\", \"UserId\")\n                        .IsUnique();\n\n                    b.ToTable(\"ContactReads\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.MessageManagement.DTOs.MessageStatusLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Channel\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CustomerProfileName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"DeliveredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int?>(\"ErrorCode\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsSessionOpen\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<long?>(\"MetaTimestamp\")\n                        .HasColumnType(\"bigint\");\n\n                    b.Property<string>(\"RawPayload\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"RecipientNumber\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateCategory\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"MessageStatusLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.PlanManagement.Models.PlanFeature\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"PlanName\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"PlanFeatureMatrix\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Tracking.Models.TrackingLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Browser\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"City\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ClickedVia\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ContactPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Country\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"DeviceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"IPAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"LastInteractionType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Referrer\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"SessionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"SourceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"SourceType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"StepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ThreadId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"CampaignSendLogId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"MessageLogId\");\n\n                    b.ToTable(\"TrackingLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Webhooks.Models.FailedWebhookLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FailureType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RawJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SourceModule\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"FailedWebhookLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Webhooks.Models.WebhookSettings\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"AutoCleanupEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastCleanupAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"WebhookSettings\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.xbTimelines.Models.LeadTimeline\", b =>\n                {\n                    b.Property<int>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"integer\");\n\n                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>(\"Id\"));\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTASourceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CTASourceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Category\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Data\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"EventType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsSystemGenerated\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid?>(\"ReferenceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.ToTable(\"LeadTimelines\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int>(\"Plan\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<DateTime>(\"QuotaResetDate\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int>(\"RemainingMessages\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<int>(\"TotalMonthlyQuota\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<decimal>(\"WalletBalance\")\n                        .HasColumnType(\"numeric\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\")\n                        .IsUnique();\n\n                    b.ToTable(\"BusinessPlanInfos\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ApiToken\")\n                        .IsRequired()\n                        .HasMaxLength(1000)\n                        .HasColumnType(\"character varying(1000)\");\n\n                    b.Property<string>(\"ApiUrl\")\n                        .IsRequired()\n                        .HasMaxLength(500)\n                        .HasColumnType(\"character varying(500)\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"PhoneNumberId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SenderDisplayName\")\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"WabaId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"WhatsAppBusinessNumber\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\")\n                        .IsUnique();\n\n                    b.ToTable(\"WhatsAppSettings\");\n                });\n\n            modelBuilder.Entity(\"ContactTag\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany(\"ContactTags\")\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Tag\", \"Tag\")\n                        .WithMany(\"ContactTags\")\n                        .HasForeignKey(\"TagId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"Tag\");\n                });\n\n            modelBuilder.Entity(\"MessageLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"SourceCampaign\")\n                        .WithMany(\"MessageLogs\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"SourceCampaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"Users\")\n                        .HasForeignKey(\"BusinessId\");\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Role\", \"Role\")\n                        .WithMany(\"Users\")\n                        .HasForeignKey(\"RoleId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Role\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.PlanPermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany()\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Plan\", \"Plan\")\n                        .WithMany(\"PlanPermissions\")\n                        .HasForeignKey(\"PlanId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"Plan\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.RolePermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany(\"RolePermissions\")\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Role\", \"Role\")\n                        .WithMany(\"RolePermissions\")\n                        .HasForeignKey(\"RoleId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"Role\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.UserPermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany(\"UserPermissions\")\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", \"User\")\n                        .WithMany(\"UserPermissions\")\n                        .HasForeignKey(\"UserId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"User\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowEdge\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowNode\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.OwnsOne(\"xbytechat.api.Features.AutoReplyBuilder.Models.Position\", \"Position\", b1 =>\n                        {\n                            b1.Property<Guid>(\"AutoReplyFlowNodeId\")\n                                .HasColumnType(\"uuid\");\n\n                            b1.Property<double>(\"X\")\n                                .HasColumnType(\"double precision\");\n\n                            b1.Property<double>(\"Y\")\n                                .HasColumnType(\"double precision\");\n\n                            b1.HasKey(\"AutoReplyFlowNodeId\");\n\n                            b1.ToTable(\"AutoReplyFlowNodes\");\n\n                            b1.WithOwner()\n                                .HasForeignKey(\"AutoReplyFlowNodeId\");\n                        });\n\n                    b.Navigation(\"Flow\");\n\n                    b.Navigation(\"Position\")\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyRule\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\");\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", \"Flow\")\n                        .WithMany(\"Steps\")\n                        .HasForeignKey(\"CTAFlowConfigId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowButtonLink\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", \"Step\")\n                        .WithMany(\"ButtonLinks\")\n                        .HasForeignKey(\"CTAFlowStepId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Step\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"Campaigns\")\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CTAManagement.Models.CTADefinition\", \"Cta\")\n                        .WithMany()\n                        .HasForeignKey(\"CtaId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"SourceCampaign\")\n                        .WithMany()\n                        .HasForeignKey(\"SourceCampaignId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Cta\");\n\n                    b.Navigation(\"SourceCampaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignButton\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"MultiButtons\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Campaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignFlowOverride\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Campaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Restrict)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"Recipients\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"Contact\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"MessageLog\", \"MessageLog\")\n                        .WithMany()\n                        .HasForeignKey(\"MessageLogId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", \"Recipient\")\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"RecipientId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", null)\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"UserId\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"MessageLog\");\n\n                    b.Navigation(\"Recipient\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.MessageManagement.DTOs.MessageStatusLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"BusinessId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"CampaignId\");\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", \"User\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"UserId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"User\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Tracking.Models.TrackingLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", \"CampaignSendLog\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignSendLogId\");\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\");\n\n                    b.HasOne(\"MessageLog\", \"MessageLog\")\n                        .WithMany()\n                        .HasForeignKey(\"MessageLogId\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"CampaignSendLog\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"MessageLog\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.xbTimelines.Models.LeadTimeline\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Contact\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithOne(\"BusinessPlanInfo\")\n                        .HasForeignKey(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", \"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", null)\n                        .WithOne(\"WhatsAppSettings\")\n                        .HasForeignKey(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", \"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"SendLogs\");\n\n                    b.Navigation(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.Navigation(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Tag\", b =>\n                {\n                    b.Navigation(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Permission\", b =>\n                {\n                    b.Navigation(\"RolePermissions\");\n\n                    b.Navigation(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Plan\", b =>\n                {\n                    b.Navigation(\"PlanPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Role\", b =>\n                {\n                    b.Navigation(\"RolePermissions\");\n\n                    b.Navigation(\"Users\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.BusinessModule.Models.Business\", b =>\n                {\n                    b.Navigation(\"BusinessPlanInfo\");\n\n                    b.Navigation(\"Campaigns\");\n\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"Users\");\n\n                    b.Navigation(\"WhatsAppSettings\")\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", b =>\n                {\n                    b.Navigation(\"Steps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.Navigation(\"ButtonLinks\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.Navigation(\"MessageLogs\");\n\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"MultiButtons\");\n\n                    b.Navigation(\"Recipients\");\n\n                    b.Navigation(\"SendLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.Navigation(\"SendLogs\");\n                });\n#pragma warning restore 612, 618\n        }\n    }\n}\n"
    },
    {
      "path": "xbytechat-api/Migrations/20250619130505_UPdateTablePlanFeatureMatrix.cs",
      "sha256": "26fb8a69ab1324e31227be87f39d8da48d2968e30881e1e63d1492a99e9a00cc",
      "language": "csharp",
      "size": 27169,
      "content": "using System;\nusing Microsoft.EntityFrameworkCore.Migrations;\n\n#nullable disable\n\n#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional\n\nnamespace xbytechat.api.Migrations\n{\n    /// <inheritdoc />\n    public partial class UPdateTablePlanFeatureMatrix : Migration\n    {\n        /// <inheritdoc />\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"096be258-50ae-4078-b0b8-c26a084fd724\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"0fd99a93-afb1-4c95-bd45-6cac60d66c95\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"252166cd-7af1-4e13-9307-d49d67174ca0\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"3ac31a18-ad13-4c36-b48b-809df1accbea\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"3ae5fc4a-1802-4e1d-88e1-1a18ec723c68\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"3b73270a-83ea-4035-bc71-afcd2712b655\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"4a1d7dea-8658-4b83-ab55-3fa7d44acfca\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"58bc10ee-9c29-43f1-91ae-b47c230c074c\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"5974390a-3569-4e81-844a-eef6252ef7e4\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"81b8d4c8-6ce9-45b4-8edf-420e9e7cc508\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"ab889393-3213-491e-9a14-22ed8d5e2ec9\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"cf24b7f5-1cd6-4a11-ae7d-6cf51ef639b4\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"d93c4342-cb14-4ca7-a8f5-8b48689cb9d5\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"e6bbb9ea-c7c5-46ec-a174-89321cb049f4\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"e7be4659-3d78-46ee-ada0-d8daf6dfc315\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"eaea5537-8ed7-4503-aa6e-e7d5e8cff0bb\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"f793d715-08c4-4660-bb72-79c135d915fa\"));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4701));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4709));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4712));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4715));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4717));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4721));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4724));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4726));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4729));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4744));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4747));\n\n            migrationBuilder.InsertData(\n                table: \"RolePermissions\",\n                columns: new[] { \"Id\", \"AssignedAt\", \"AssignedBy\", \"IsActive\", \"IsRevoked\", \"PermissionId\", \"RoleId\" },\n                values: new object[,]\n                {\n                    { new Guid(\"07503bb5-f5a3-48e0-916c-6310c7e132d6\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5306), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"0c898220-4231-4723-9bbf-304fe6447cd0\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5272), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"0e6bd3b2-5056-4cc3-97fd-a11e4e1e4a3e\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5212), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000002\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"1198345c-c96c-44d4-9602-3d5382ea69c2\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5226), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"2af188d1-7bd2-4eda-bc94-aea97e80d16e\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5260), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000009\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"3a30a452-7f8c-4d6a-92f0-971393a2b3c5\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5255), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000008\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"4283079b-7d1f-4184-bd9d-5341d110b461\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5279), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"7504e744-8b7a-4422-8cc2-287e3d771041\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5310), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"7f7bc705-2d45-43cc-815c-a8889a123721\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5295), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"9e2c8d5b-dc26-449d-b0bd-be663e09e61c\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5235), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000006\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"a3f6f36e-4aa6-4a3f-ba9b-3205bc918f14\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5253), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"b25ff30e-10d9-4b9d-bf52-30c92e49d3a7\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5263), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000010\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"c8729359-8505-47ca-b4fc-5e80ce84e4c7\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5203), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"cd29166e-6d07-4f88-bcac-b52eba3e40c8\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5231), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000005\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"cdcd8d38-dbbc-49ee-a39d-026fa25f1eea\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5195), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"e837feae-a731-4ab4-98d0-5441b93ed285\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5217), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000003\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"ff6899d1-69ff-4245-949c-2446bcf28ff4\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5276), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000004\") }\n                });\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3868));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3871));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3872));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3874));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3875));\n        }\n\n        /// <inheritdoc />\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"07503bb5-f5a3-48e0-916c-6310c7e132d6\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"0c898220-4231-4723-9bbf-304fe6447cd0\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"0e6bd3b2-5056-4cc3-97fd-a11e4e1e4a3e\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"1198345c-c96c-44d4-9602-3d5382ea69c2\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"2af188d1-7bd2-4eda-bc94-aea97e80d16e\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"3a30a452-7f8c-4d6a-92f0-971393a2b3c5\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"4283079b-7d1f-4184-bd9d-5341d110b461\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"7504e744-8b7a-4422-8cc2-287e3d771041\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"7f7bc705-2d45-43cc-815c-a8889a123721\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"9e2c8d5b-dc26-449d-b0bd-be663e09e61c\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"a3f6f36e-4aa6-4a3f-ba9b-3205bc918f14\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"b25ff30e-10d9-4b9d-bf52-30c92e49d3a7\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"c8729359-8505-47ca-b4fc-5e80ce84e4c7\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"cd29166e-6d07-4f88-bcac-b52eba3e40c8\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"cdcd8d38-dbbc-49ee-a39d-026fa25f1eea\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"e837feae-a731-4ab4-98d0-5441b93ed285\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"ff6899d1-69ff-4245-949c-2446bcf28ff4\"));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1484));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1496));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1500));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1504));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1507));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1513));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1516));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1520));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1524));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1544));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1547));\n\n            migrationBuilder.InsertData(\n                table: \"RolePermissions\",\n                columns: new[] { \"Id\", \"AssignedAt\", \"AssignedBy\", \"IsActive\", \"IsRevoked\", \"PermissionId\", \"RoleId\" },\n                values: new object[,]\n                {\n                    { new Guid(\"096be258-50ae-4078-b0b8-c26a084fd724\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1993), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000005\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"0fd99a93-afb1-4c95-bd45-6cac60d66c95\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2113), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"252166cd-7af1-4e13-9307-d49d67174ca0\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2084), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"3ac31a18-ad13-4c36-b48b-809df1accbea\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1987), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"3ae5fc4a-1802-4e1d-88e1-1a18ec723c68\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2003), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"3b73270a-83ea-4035-bc71-afcd2712b655\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2069), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000010\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"4a1d7dea-8658-4b83-ab55-3fa7d44acfca\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2123), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"58bc10ee-9c29-43f1-91ae-b47c230c074c\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2129), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"5974390a-3569-4e81-844a-eef6252ef7e4\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1966), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000003\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"81b8d4c8-6ce9-45b4-8edf-420e9e7cc508\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2065), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000009\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"ab889393-3213-491e-9a14-22ed8d5e2ec9\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2093), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"cf24b7f5-1cd6-4a11-ae7d-6cf51ef639b4\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1934), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"d93c4342-cb14-4ca7-a8f5-8b48689cb9d5\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1961), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000002\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"e6bbb9ea-c7c5-46ec-a174-89321cb049f4\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2058), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000008\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"e7be4659-3d78-46ee-ada0-d8daf6dfc315\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1998), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000006\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"eaea5537-8ed7-4503-aa6e-e7d5e8cff0bb\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(1955), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"f793d715-08c4-4660-bb72-79c135d915fa\"), new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(2099), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000004\") }\n                });\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(346));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(350));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(352));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(354));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 12, 58, 3, 278, DateTimeKind.Utc).AddTicks(356));\n        }\n    }\n}\n"
    },
    {
      "path": "xbytechat-api/Migrations/20250619130505_UPdateTablePlanFeatureMatrix.Designer.cs",
      "sha256": "0938cd34750cea2adf124f72405261071a3460ad56f8e416f2503f446cb8620a",
      "language": "csharp",
      "size": 107752,
      "content": "// <auto-generated />\nusing System;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Migrations;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\nusing Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;\nusing xbytechat.api;\n\n#nullable disable\n\nnamespace xbytechat.api.Migrations\n{\n    [DbContext(typeof(AppDbContext))]\n    [Migration(\"20250619130505_UPdateTablePlanFeatureMatrix\")]\n    partial class UPdateTablePlanFeatureMatrix\n    {\n        /// <inheritdoc />\n        protected override void BuildTargetModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder\n                .HasAnnotation(\"ProductVersion\", \"8.0.15\")\n                .HasAnnotation(\"Relational:MaxIdentifierLength\", 63);\n\n            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);\n\n            modelBuilder.Entity(\"ContactTag\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"TagId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"TagId\");\n\n                    b.ToTable(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"MessageLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTAFlowStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsIncoming\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MediaUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageContent\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RawResponse\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RecipientNumber\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"RefMessageId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RenderedBody\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.ToTable(\"MessageLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Email\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"PasswordHash\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"RoleId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"RoleId\");\n\n                    b.ToTable(\"Users\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"AssignedAgentId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Email\")\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<string>(\"Group\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsArchived\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsAutomationPaused\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsFavorite\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastCTAInteraction\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LastCTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"LastClickedProductId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"LastContactedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LeadSource\")\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<DateTime?>(\"NextFollowUpAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasMaxLength(500)\n                        .HasColumnType(\"character varying(500)\");\n\n                    b.Property<string>(\"PhoneNumber\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.Property<string>(\"Tags\")\n                        .HasMaxLength(200)\n                        .HasColumnType(\"character varying(200)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.ToTable(\"Contacts\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Note\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Content\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"EditedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsInternal\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsPinned\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Notes\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Reminder\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"CompletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"DueAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRecurring\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"LastCTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"LastClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LinkedCampaign\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int?>(\"Priority\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"RecurrencePattern\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ReminderType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"SendWhatsappNotification\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Reminders\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Tag\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Category\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ColorHex\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsSystemTag\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastUsedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Tags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Permission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Code\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Group\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Permissions\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            Code = \"dashboard.view\",\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4701),\n                            Description = \"Permission for dashboard.view\",\n                            IsActive = true,\n                            Name = \"dashboard.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                            Code = \"campaign.view\",\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4709),\n                            Description = \"Permission for campaign.view\",\n                            IsActive = true,\n                            Name = \"campaign.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                            Code = \"campaign.create\",\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4712),\n                            Description = \"Permission for campaign.create\",\n                            IsActive = true,\n                            Name = \"campaign.create\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                            Code = \"campaign.delete\",\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4715),\n                            Description = \"Permission for campaign.delete\",\n                            IsActive = true,\n                            Name = \"campaign.delete\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                            Code = \"product.view\",\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4717),\n                            Description = \"Permission for product.view\",\n                            IsActive = true,\n                            Name = \"product.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                            Code = \"product.create\",\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4721),\n                            Description = \"Permission for product.create\",\n                            IsActive = true,\n                            Name = \"product.create\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                            Code = \"product.delete\",\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4724),\n                            Description = \"Permission for product.delete\",\n                            IsActive = true,\n                            Name = \"product.delete\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            Code = \"contacts.view\",\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4726),\n                            Description = \"Permission for contacts.view\",\n                            IsActive = true,\n                            Name = \"contacts.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                            Code = \"tags.edit\",\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4729),\n                            Description = \"Permission for tags.edit\",\n                            IsActive = true,\n                            Name = \"tags.edit\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                            Code = \"admin.business.approve\",\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4744),\n                            Description = \"Permission for admin.business.approve\",\n                            IsActive = true,\n                            Name = \"admin.business.approve\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                            Code = \"admin.logs.view\",\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4747),\n                            Description = \"Permission for admin.logs.view\",\n                            IsActive = true,\n                            Name = \"admin.logs.view\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Plan\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Code\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Plans\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.PlanPermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"PlanId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"PlanId\");\n\n                    b.ToTable(\"PlanPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Role\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsSystemDefined\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Roles\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3868),\n                            Description = \"Super Admin\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"admin\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000002\"),\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3871),\n                            Description = \"Business Partner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"partner\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000003\"),\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3872),\n                            Description = \"Reseller Partner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"reseller\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000004\"),\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3874),\n                            Description = \"Business Owner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"business\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000005\"),\n                            CreatedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3875),\n                            Description = \"Staff\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"staff\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.RolePermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRevoked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"RoleId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"RoleId\");\n\n                    b.ToTable(\"RolePermissions\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"cdcd8d38-dbbc-49ee-a39d-026fa25f1eea\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5195),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"c8729359-8505-47ca-b4fc-5e80ce84e4c7\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5203),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"0e6bd3b2-5056-4cc3-97fd-a11e4e1e4a3e\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5212),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"e837feae-a731-4ab4-98d0-5441b93ed285\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5217),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"1198345c-c96c-44d4-9602-3d5382ea69c2\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5226),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"cd29166e-6d07-4f88-bcac-b52eba3e40c8\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5231),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"9e2c8d5b-dc26-449d-b0bd-be663e09e61c\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5235),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"a3f6f36e-4aa6-4a3f-ba9b-3205bc918f14\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5253),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"3a30a452-7f8c-4d6a-92f0-971393a2b3c5\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5255),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"2af188d1-7bd2-4eda-bc94-aea97e80d16e\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5260),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"b25ff30e-10d9-4b9d-bf52-30c92e49d3a7\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5263),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"0c898220-4231-4723-9bbf-304fe6447cd0\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5272),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"ff6899d1-69ff-4245-949c-2446bcf28ff4\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5276),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"4283079b-7d1f-4184-bd9d-5341d110b461\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5279),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"7f7bc705-2d45-43cc-815c-a8889a123721\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5295),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"07503bb5-f5a3-48e0-916c-6310c7e132d6\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5306),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000005\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"7504e744-8b7a-4422-8cc2-287e3d771041\"),\n                            AssignedAt = new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5310),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000005\")\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.UserPermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsGranted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRevoked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AuditTrail.Models.AuditLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ActionType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IPAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Location\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"PerformedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"PerformedByUserName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RoleAtTime\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserAgent\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AuditLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"EdgesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AutoReplyFlows\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowEdge\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"SourceHandle\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SourceNodeId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TargetHandle\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TargetNodeId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyFlowEdges\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowNode\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ConfigJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Label\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodeType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Order\")\n                        .HasColumnType(\"integer\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyFlowNodes\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FlowName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ReplyContent\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"TriggeredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AutoReplyLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyRule\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FlowName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MediaUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Priority\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"ReplyMessage\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyRules\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.BusinessModule.Models.Business\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Address\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ApprovedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ApprovedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"BusinessEmail\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"BusinessName\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CompanyName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CompanyPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CreatedByPartnerId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeletedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Industry\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsApproved\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastLoginAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LogoUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Phone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RepresentativeName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Status\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Tags\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Website\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Businesses\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FlowName\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsPublished\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CTAFlowConfigs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<float?>(\"PositionX\")\n                        .HasColumnType(\"real\");\n\n                    b.Property<float?>(\"PositionY\")\n                        .HasColumnType(\"real\");\n\n                    b.Property<string>(\"RequiredSource\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RequiredTag\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"StepOrder\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"TemplateToSend\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CTAFlowConfigId\");\n\n                    b.ToTable(\"CTAFlowSteps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowButtonLink\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonSubType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonValue\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"CTAFlowStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"NextStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CTAFlowStepId\");\n\n                    b.ToTable(\"FlowButtonLinks\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowExecutionLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ContactPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"ExecutedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RawResponse\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"StepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"StepName\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"Success\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"TrackingLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"TriggeredByButton\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"FlowExecutionLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAManagement.Models.CTADefinition\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"TargetUrl\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CTADefinitions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CampaignType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CtaId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeletedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FollowUpTemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageCaption\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessageBody\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageTemplate\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ScheduledAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"SourceCampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateParameters\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CtaId\");\n\n                    b.HasIndex(\"SourceCampaignId\");\n\n                    b.ToTable(\"Campaigns\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignButton\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"IsFromTemplate\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<int>(\"Position\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Type\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Value\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.ToTable(\"CampaignButtons\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignFlowOverride\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"OverrideNextTemplate\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.ToTable(\"CampaignFlowOverrides\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"BotId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CategoryBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ClickedCTA\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"IsAutoTagged\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessagePreview\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProductBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.ToTable(\"CampaignRecipients\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"AllowRetry\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Browser\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"City\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ClickType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Country\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"DeliveredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeviceInfo\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"DeviceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IpAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsClicked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastRetryAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LastRetryStatus\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MacAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageBody\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"ReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"RecipientId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<int>(\"RetryCount\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"SendStatus\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"SourceChannel\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"MessageLogId\");\n\n                    b.HasIndex(\"RecipientId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"CampaignSendLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Catalog.Models.CatalogClickLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"BotId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAJourney\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CategoryBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CtaId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"LastInteractionType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"PlanSnapshot\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProductBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ProductId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RefMessageId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CatalogClickLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Catalog.Models.Product\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Currency\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageUrl\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"MostClickedCTA\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<decimal>(\"Price\")\n                        .HasColumnType(\"numeric\");\n\n                    b.Property<int>(\"TotalClicks\")\n                        .HasColumnType(\"integer\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Products\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.FeatureAccessModule.Models.FeatureAccess\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\", \"FeatureName\")\n                        .IsUnique();\n\n                    b.ToTable(\"FeatureAccess\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.FeatureAccessModule.Models.UserFeatureAccess\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid?>(\"ModifiedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"UserFeatureAccess\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Inbox.Models.ChatSessionState\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"LastUpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Mode\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UpdatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"ChatSessionStates\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Inbox.Models.ContactRead\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"LastReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ContactId\", \"UserId\")\n                        .IsUnique();\n\n                    b.ToTable(\"ContactReads\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.MessageManagement.DTOs.MessageStatusLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Channel\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CustomerProfileName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"DeliveredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int?>(\"ErrorCode\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsSessionOpen\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<long?>(\"MetaTimestamp\")\n                        .HasColumnType(\"bigint\");\n\n                    b.Property<string>(\"RawPayload\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"RecipientNumber\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateCategory\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"MessageStatusLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.PlanManagement.Models.PlanFeatureMatrix\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"PlanName\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"PlanFeatureMatrix\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Tracking.Models.TrackingLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Browser\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"City\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ClickedVia\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ContactPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Country\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"DeviceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"IPAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"LastInteractionType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Referrer\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"SessionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"SourceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"SourceType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"StepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ThreadId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"CampaignSendLogId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"MessageLogId\");\n\n                    b.ToTable(\"TrackingLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Webhooks.Models.FailedWebhookLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FailureType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RawJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SourceModule\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"FailedWebhookLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Webhooks.Models.WebhookSettings\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"AutoCleanupEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastCleanupAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"WebhookSettings\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.xbTimelines.Models.LeadTimeline\", b =>\n                {\n                    b.Property<int>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"integer\");\n\n                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>(\"Id\"));\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTASourceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CTASourceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Category\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Data\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"EventType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsSystemGenerated\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid?>(\"ReferenceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.ToTable(\"LeadTimelines\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int>(\"Plan\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<DateTime>(\"QuotaResetDate\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int>(\"RemainingMessages\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<int>(\"TotalMonthlyQuota\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<decimal>(\"WalletBalance\")\n                        .HasColumnType(\"numeric\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\")\n                        .IsUnique();\n\n                    b.ToTable(\"BusinessPlanInfos\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ApiToken\")\n                        .IsRequired()\n                        .HasMaxLength(1000)\n                        .HasColumnType(\"character varying(1000)\");\n\n                    b.Property<string>(\"ApiUrl\")\n                        .IsRequired()\n                        .HasMaxLength(500)\n                        .HasColumnType(\"character varying(500)\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"PhoneNumberId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SenderDisplayName\")\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"WabaId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"WhatsAppBusinessNumber\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\")\n                        .IsUnique();\n\n                    b.ToTable(\"WhatsAppSettings\");\n                });\n\n            modelBuilder.Entity(\"ContactTag\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany(\"ContactTags\")\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Tag\", \"Tag\")\n                        .WithMany(\"ContactTags\")\n                        .HasForeignKey(\"TagId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"Tag\");\n                });\n\n            modelBuilder.Entity(\"MessageLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"SourceCampaign\")\n                        .WithMany(\"MessageLogs\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"SourceCampaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"Users\")\n                        .HasForeignKey(\"BusinessId\");\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Role\", \"Role\")\n                        .WithMany(\"Users\")\n                        .HasForeignKey(\"RoleId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Role\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.PlanPermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany()\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Plan\", \"Plan\")\n                        .WithMany(\"PlanPermissions\")\n                        .HasForeignKey(\"PlanId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"Plan\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.RolePermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany(\"RolePermissions\")\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Role\", \"Role\")\n                        .WithMany(\"RolePermissions\")\n                        .HasForeignKey(\"RoleId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"Role\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.UserPermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany(\"UserPermissions\")\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", \"User\")\n                        .WithMany(\"UserPermissions\")\n                        .HasForeignKey(\"UserId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"User\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowEdge\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowNode\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.OwnsOne(\"xbytechat.api.Features.AutoReplyBuilder.Models.Position\", \"Position\", b1 =>\n                        {\n                            b1.Property<Guid>(\"AutoReplyFlowNodeId\")\n                                .HasColumnType(\"uuid\");\n\n                            b1.Property<double>(\"X\")\n                                .HasColumnType(\"double precision\");\n\n                            b1.Property<double>(\"Y\")\n                                .HasColumnType(\"double precision\");\n\n                            b1.HasKey(\"AutoReplyFlowNodeId\");\n\n                            b1.ToTable(\"AutoReplyFlowNodes\");\n\n                            b1.WithOwner()\n                                .HasForeignKey(\"AutoReplyFlowNodeId\");\n                        });\n\n                    b.Navigation(\"Flow\");\n\n                    b.Navigation(\"Position\")\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyRule\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\");\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", \"Flow\")\n                        .WithMany(\"Steps\")\n                        .HasForeignKey(\"CTAFlowConfigId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowButtonLink\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", \"Step\")\n                        .WithMany(\"ButtonLinks\")\n                        .HasForeignKey(\"CTAFlowStepId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Step\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"Campaigns\")\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CTAManagement.Models.CTADefinition\", \"Cta\")\n                        .WithMany()\n                        .HasForeignKey(\"CtaId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"SourceCampaign\")\n                        .WithMany()\n                        .HasForeignKey(\"SourceCampaignId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Cta\");\n\n                    b.Navigation(\"SourceCampaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignButton\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"MultiButtons\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Campaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignFlowOverride\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Campaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Restrict)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"Recipients\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"Contact\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"MessageLog\", \"MessageLog\")\n                        .WithMany()\n                        .HasForeignKey(\"MessageLogId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", \"Recipient\")\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"RecipientId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", null)\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"UserId\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"MessageLog\");\n\n                    b.Navigation(\"Recipient\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.MessageManagement.DTOs.MessageStatusLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"BusinessId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"CampaignId\");\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", \"User\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"UserId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"User\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Tracking.Models.TrackingLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", \"CampaignSendLog\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignSendLogId\");\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\");\n\n                    b.HasOne(\"MessageLog\", \"MessageLog\")\n                        .WithMany()\n                        .HasForeignKey(\"MessageLogId\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"CampaignSendLog\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"MessageLog\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.xbTimelines.Models.LeadTimeline\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Contact\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithOne(\"BusinessPlanInfo\")\n                        .HasForeignKey(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", \"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", null)\n                        .WithOne(\"WhatsAppSettings\")\n                        .HasForeignKey(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", \"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"SendLogs\");\n\n                    b.Navigation(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.Navigation(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Tag\", b =>\n                {\n                    b.Navigation(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Permission\", b =>\n                {\n                    b.Navigation(\"RolePermissions\");\n\n                    b.Navigation(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Plan\", b =>\n                {\n                    b.Navigation(\"PlanPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Role\", b =>\n                {\n                    b.Navigation(\"RolePermissions\");\n\n                    b.Navigation(\"Users\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.BusinessModule.Models.Business\", b =>\n                {\n                    b.Navigation(\"BusinessPlanInfo\");\n\n                    b.Navigation(\"Campaigns\");\n\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"Users\");\n\n                    b.Navigation(\"WhatsAppSettings\")\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", b =>\n                {\n                    b.Navigation(\"Steps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.Navigation(\"ButtonLinks\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.Navigation(\"MessageLogs\");\n\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"MultiButtons\");\n\n                    b.Navigation(\"Recipients\");\n\n                    b.Navigation(\"SendLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.Navigation(\"SendLogs\");\n                });\n#pragma warning restore 612, 618\n        }\n    }\n}\n"
    },
    {
      "path": "xbytechat-api/Migrations/20250621073612_AddRefreshTokenSupport.cs",
      "sha256": "065b07a1fa59c36ea7f823fd687444d54a87d3b9406fb6b9cad4f5eb9fadbfb1",
      "language": "csharp",
      "size": 28932,
      "content": "using System;\nusing Microsoft.EntityFrameworkCore.Migrations;\n\n#nullable disable\n\n#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional\n\nnamespace xbytechat.api.Migrations\n{\n    /// <inheritdoc />\n    public partial class AddRefreshTokenSupport : Migration\n    {\n        /// <inheritdoc />\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"07503bb5-f5a3-48e0-916c-6310c7e132d6\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"0c898220-4231-4723-9bbf-304fe6447cd0\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"0e6bd3b2-5056-4cc3-97fd-a11e4e1e4a3e\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"1198345c-c96c-44d4-9602-3d5382ea69c2\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"2af188d1-7bd2-4eda-bc94-aea97e80d16e\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"3a30a452-7f8c-4d6a-92f0-971393a2b3c5\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"4283079b-7d1f-4184-bd9d-5341d110b461\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"7504e744-8b7a-4422-8cc2-287e3d771041\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"7f7bc705-2d45-43cc-815c-a8889a123721\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"9e2c8d5b-dc26-449d-b0bd-be663e09e61c\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"a3f6f36e-4aa6-4a3f-ba9b-3205bc918f14\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"b25ff30e-10d9-4b9d-bf52-30c92e49d3a7\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"c8729359-8505-47ca-b4fc-5e80ce84e4c7\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"cd29166e-6d07-4f88-bcac-b52eba3e40c8\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"cdcd8d38-dbbc-49ee-a39d-026fa25f1eea\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"e837feae-a731-4ab4-98d0-5441b93ed285\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"ff6899d1-69ff-4245-949c-2446bcf28ff4\"));\n\n            migrationBuilder.AddColumn<string>(\n                name: \"RefreshToken\",\n                table: \"Users\",\n                type: \"text\",\n                nullable: true);\n\n            migrationBuilder.AddColumn<DateTime>(\n                name: \"RefreshTokenExpiry\",\n                table: \"Users\",\n                type: \"timestamp with time zone\",\n                nullable: true);\n\n            migrationBuilder.AddColumn<Guid>(\n                name: \"BusinessId\",\n                table: \"UserFeatureAccess\",\n                type: \"uuid\",\n                nullable: false,\n                defaultValue: new Guid(\"00000000-0000-0000-0000-000000000000\"));\n\n            migrationBuilder.AddColumn<string>(\n                name: \"Description\",\n                table: \"FeatureAccess\",\n                type: \"character varying(200)\",\n                maxLength: 200,\n                nullable: false,\n                defaultValue: \"\");\n\n            migrationBuilder.AddColumn<string>(\n                name: \"Group\",\n                table: \"FeatureAccess\",\n                type: \"character varying(50)\",\n                maxLength: 50,\n                nullable: false,\n                defaultValue: \"\");\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9532));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9542));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9545));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9547));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9550));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9554));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9609));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9612));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9616));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9629));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9631));\n\n            migrationBuilder.InsertData(\n                table: \"RolePermissions\",\n                columns: new[] { \"Id\", \"AssignedAt\", \"AssignedBy\", \"IsActive\", \"IsRevoked\", \"PermissionId\", \"RoleId\" },\n                values: new object[,]\n                {\n                    { new Guid(\"0574c0c9-3f81-428d-af3a-d2a90fb35b8e\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(111), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"08344dd6-c032-4918-a5ed-145f085617e0\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(101), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"2dc90489-89ac-4877-b0df-869a7bf893ed\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(31), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"3313278a-881c-4bb0-932f-adb0ef4f960e\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(106), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"389c40b7-c1a8-4933-9b22-7a13099641e6\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(134), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"3f057e7a-e29b-4ca9-932b-6f5700c26eda\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(85), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000009\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"623c923e-ed8a-40e1-bdf2-75beadd7c3fd\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(77), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"6fd53fe6-6790-4c93-9193-e40732e38797\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(137), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"76b5616e-cf3f-4a28-b434-a75380fa86a5\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(89), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000010\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"7eae3e11-c8fb-4870-a688-1eb0b69f3fe6\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(52), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"90235fca-ea3a-4d87-9843-8120d6a248aa\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(56), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000005\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"a3ff4e6d-c3db-47d0-8d5a-dc05a868bd21\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(23), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"b5fa27ec-9cba-4d9e-9e7b-1914c6a1be5c\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(35), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000002\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"b60da824-36e3-40c6-9dcc-254786b056d7\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(73), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000006\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"c7ceb1c9-1bcf-41fc-8be3-5bb894ecd502\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(126), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"f50a2419-dcfa-42e1-9b5f-feed5cb19d55\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(39), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000003\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"fc083ff6-22d7-45ff-a2ea-db995bf3634e\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(81), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000008\"), new Guid(\"00000000-0000-0000-0000-000000000001\") }\n                });\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8739));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8742));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8744));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8745));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8747));\n        }\n\n        /// <inheritdoc />\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"0574c0c9-3f81-428d-af3a-d2a90fb35b8e\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"08344dd6-c032-4918-a5ed-145f085617e0\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"2dc90489-89ac-4877-b0df-869a7bf893ed\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"3313278a-881c-4bb0-932f-adb0ef4f960e\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"389c40b7-c1a8-4933-9b22-7a13099641e6\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"3f057e7a-e29b-4ca9-932b-6f5700c26eda\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"623c923e-ed8a-40e1-bdf2-75beadd7c3fd\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"6fd53fe6-6790-4c93-9193-e40732e38797\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"76b5616e-cf3f-4a28-b434-a75380fa86a5\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"7eae3e11-c8fb-4870-a688-1eb0b69f3fe6\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"90235fca-ea3a-4d87-9843-8120d6a248aa\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"a3ff4e6d-c3db-47d0-8d5a-dc05a868bd21\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"b5fa27ec-9cba-4d9e-9e7b-1914c6a1be5c\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"b60da824-36e3-40c6-9dcc-254786b056d7\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"c7ceb1c9-1bcf-41fc-8be3-5bb894ecd502\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"f50a2419-dcfa-42e1-9b5f-feed5cb19d55\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"fc083ff6-22d7-45ff-a2ea-db995bf3634e\"));\n\n            migrationBuilder.DropColumn(\n                name: \"RefreshToken\",\n                table: \"Users\");\n\n            migrationBuilder.DropColumn(\n                name: \"RefreshTokenExpiry\",\n                table: \"Users\");\n\n            migrationBuilder.DropColumn(\n                name: \"BusinessId\",\n                table: \"UserFeatureAccess\");\n\n            migrationBuilder.DropColumn(\n                name: \"Description\",\n                table: \"FeatureAccess\");\n\n            migrationBuilder.DropColumn(\n                name: \"Group\",\n                table: \"FeatureAccess\");\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4701));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4709));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4712));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4715));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4717));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4721));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4724));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4726));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4729));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4744));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(4747));\n\n            migrationBuilder.InsertData(\n                table: \"RolePermissions\",\n                columns: new[] { \"Id\", \"AssignedAt\", \"AssignedBy\", \"IsActive\", \"IsRevoked\", \"PermissionId\", \"RoleId\" },\n                values: new object[,]\n                {\n                    { new Guid(\"07503bb5-f5a3-48e0-916c-6310c7e132d6\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5306), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"0c898220-4231-4723-9bbf-304fe6447cd0\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5272), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"0e6bd3b2-5056-4cc3-97fd-a11e4e1e4a3e\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5212), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000002\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"1198345c-c96c-44d4-9602-3d5382ea69c2\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5226), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"2af188d1-7bd2-4eda-bc94-aea97e80d16e\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5260), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000009\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"3a30a452-7f8c-4d6a-92f0-971393a2b3c5\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5255), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000008\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"4283079b-7d1f-4184-bd9d-5341d110b461\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5279), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"7504e744-8b7a-4422-8cc2-287e3d771041\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5310), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"7f7bc705-2d45-43cc-815c-a8889a123721\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5295), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"9e2c8d5b-dc26-449d-b0bd-be663e09e61c\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5235), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000006\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"a3f6f36e-4aa6-4a3f-ba9b-3205bc918f14\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5253), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"b25ff30e-10d9-4b9d-bf52-30c92e49d3a7\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5263), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000010\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"c8729359-8505-47ca-b4fc-5e80ce84e4c7\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5203), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"cd29166e-6d07-4f88-bcac-b52eba3e40c8\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5231), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000005\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"cdcd8d38-dbbc-49ee-a39d-026fa25f1eea\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5195), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"e837feae-a731-4ab4-98d0-5441b93ed285\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5217), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000003\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"ff6899d1-69ff-4245-949c-2446bcf28ff4\"), new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(5276), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000004\") }\n                });\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3868));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3871));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3872));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3874));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 19, 13, 5, 4, 368, DateTimeKind.Utc).AddTicks(3875));\n        }\n    }\n}\n"
    },
    {
      "path": "xbytechat-api/Migrations/20250621073612_AddRefreshTokenSupport.Designer.cs",
      "sha256": "3e1cb9fe47d7cc3e37406238cefff003bae5a6da8a73301c61c851a9d79b09aa",
      "language": "csharp",
      "size": 108478,
      "content": "// <auto-generated />\nusing System;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Migrations;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\nusing Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;\nusing xbytechat.api;\n\n#nullable disable\n\nnamespace xbytechat.api.Migrations\n{\n    [DbContext(typeof(AppDbContext))]\n    [Migration(\"20250621073612_AddRefreshTokenSupport\")]\n    partial class AddRefreshTokenSupport\n    {\n        /// <inheritdoc />\n        protected override void BuildTargetModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder\n                .HasAnnotation(\"ProductVersion\", \"8.0.15\")\n                .HasAnnotation(\"Relational:MaxIdentifierLength\", 63);\n\n            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);\n\n            modelBuilder.Entity(\"ContactTag\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"TagId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"TagId\");\n\n                    b.ToTable(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"MessageLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTAFlowStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsIncoming\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MediaUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageContent\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RawResponse\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RecipientNumber\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"RefMessageId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RenderedBody\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.ToTable(\"MessageLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Email\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"PasswordHash\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RefreshToken\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"RefreshTokenExpiry\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"RoleId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"RoleId\");\n\n                    b.ToTable(\"Users\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"AssignedAgentId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Email\")\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<string>(\"Group\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsArchived\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsAutomationPaused\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsFavorite\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastCTAInteraction\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LastCTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"LastClickedProductId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"LastContactedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LeadSource\")\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<DateTime?>(\"NextFollowUpAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasMaxLength(500)\n                        .HasColumnType(\"character varying(500)\");\n\n                    b.Property<string>(\"PhoneNumber\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.Property<string>(\"Tags\")\n                        .HasMaxLength(200)\n                        .HasColumnType(\"character varying(200)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.ToTable(\"Contacts\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Note\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Content\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"EditedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsInternal\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsPinned\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Notes\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Reminder\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"CompletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"DueAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRecurring\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"LastCTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"LastClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LinkedCampaign\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int?>(\"Priority\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"RecurrencePattern\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ReminderType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"SendWhatsappNotification\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Reminders\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Tag\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Category\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ColorHex\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsSystemTag\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastUsedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Tags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Permission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Code\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Group\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Permissions\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            Code = \"dashboard.view\",\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9532),\n                            Description = \"Permission for dashboard.view\",\n                            IsActive = true,\n                            Name = \"dashboard.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                            Code = \"campaign.view\",\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9542),\n                            Description = \"Permission for campaign.view\",\n                            IsActive = true,\n                            Name = \"campaign.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                            Code = \"campaign.create\",\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9545),\n                            Description = \"Permission for campaign.create\",\n                            IsActive = true,\n                            Name = \"campaign.create\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                            Code = \"campaign.delete\",\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9547),\n                            Description = \"Permission for campaign.delete\",\n                            IsActive = true,\n                            Name = \"campaign.delete\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                            Code = \"product.view\",\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9550),\n                            Description = \"Permission for product.view\",\n                            IsActive = true,\n                            Name = \"product.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                            Code = \"product.create\",\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9554),\n                            Description = \"Permission for product.create\",\n                            IsActive = true,\n                            Name = \"product.create\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                            Code = \"product.delete\",\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9609),\n                            Description = \"Permission for product.delete\",\n                            IsActive = true,\n                            Name = \"product.delete\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            Code = \"contacts.view\",\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9612),\n                            Description = \"Permission for contacts.view\",\n                            IsActive = true,\n                            Name = \"contacts.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                            Code = \"tags.edit\",\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9616),\n                            Description = \"Permission for tags.edit\",\n                            IsActive = true,\n                            Name = \"tags.edit\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                            Code = \"admin.business.approve\",\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9629),\n                            Description = \"Permission for admin.business.approve\",\n                            IsActive = true,\n                            Name = \"admin.business.approve\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                            Code = \"admin.logs.view\",\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9631),\n                            Description = \"Permission for admin.logs.view\",\n                            IsActive = true,\n                            Name = \"admin.logs.view\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Plan\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Code\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Plans\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.PlanPermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"PlanId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"PlanId\");\n\n                    b.ToTable(\"PlanPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Role\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsSystemDefined\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Roles\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8739),\n                            Description = \"Super Admin\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"admin\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000002\"),\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8742),\n                            Description = \"Business Partner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"partner\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000003\"),\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8744),\n                            Description = \"Reseller Partner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"reseller\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000004\"),\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8745),\n                            Description = \"Business Owner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"business\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000005\"),\n                            CreatedAt = new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8747),\n                            Description = \"Staff\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"staff\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.RolePermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRevoked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"RoleId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"RoleId\");\n\n                    b.ToTable(\"RolePermissions\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"a3ff4e6d-c3db-47d0-8d5a-dc05a868bd21\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(23),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"2dc90489-89ac-4877-b0df-869a7bf893ed\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(31),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"b5fa27ec-9cba-4d9e-9e7b-1914c6a1be5c\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(35),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"f50a2419-dcfa-42e1-9b5f-feed5cb19d55\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(39),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"7eae3e11-c8fb-4870-a688-1eb0b69f3fe6\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(52),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"90235fca-ea3a-4d87-9843-8120d6a248aa\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(56),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"b60da824-36e3-40c6-9dcc-254786b056d7\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(73),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"623c923e-ed8a-40e1-bdf2-75beadd7c3fd\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(77),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"fc083ff6-22d7-45ff-a2ea-db995bf3634e\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(81),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"3f057e7a-e29b-4ca9-932b-6f5700c26eda\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(85),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"76b5616e-cf3f-4a28-b434-a75380fa86a5\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(89),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"08344dd6-c032-4918-a5ed-145f085617e0\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(101),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"3313278a-881c-4bb0-932f-adb0ef4f960e\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(106),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"0574c0c9-3f81-428d-af3a-d2a90fb35b8e\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(111),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"c7ceb1c9-1bcf-41fc-8be3-5bb894ecd502\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(126),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"389c40b7-c1a8-4933-9b22-7a13099641e6\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(134),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000005\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"6fd53fe6-6790-4c93-9193-e40732e38797\"),\n                            AssignedAt = new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(137),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000005\")\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.UserPermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsGranted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRevoked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AuditTrail.Models.AuditLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ActionType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IPAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Location\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"PerformedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"PerformedByUserName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RoleAtTime\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserAgent\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AuditLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"EdgesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AutoReplyFlows\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowEdge\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"SourceHandle\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SourceNodeId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TargetHandle\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TargetNodeId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyFlowEdges\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowNode\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ConfigJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Label\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodeType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Order\")\n                        .HasColumnType(\"integer\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyFlowNodes\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FlowName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ReplyContent\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"TriggeredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AutoReplyLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyRule\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FlowName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MediaUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Priority\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"ReplyMessage\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyRules\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.BusinessModule.Models.Business\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Address\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ApprovedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ApprovedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"BusinessEmail\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"BusinessName\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CompanyName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CompanyPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CreatedByPartnerId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeletedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Industry\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsApproved\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastLoginAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LogoUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Phone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RepresentativeName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Status\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Tags\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Website\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Businesses\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FlowName\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsPublished\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CTAFlowConfigs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<float?>(\"PositionX\")\n                        .HasColumnType(\"real\");\n\n                    b.Property<float?>(\"PositionY\")\n                        .HasColumnType(\"real\");\n\n                    b.Property<string>(\"RequiredSource\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RequiredTag\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"StepOrder\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"TemplateToSend\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CTAFlowConfigId\");\n\n                    b.ToTable(\"CTAFlowSteps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowButtonLink\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonSubType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonValue\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"CTAFlowStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"NextStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CTAFlowStepId\");\n\n                    b.ToTable(\"FlowButtonLinks\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowExecutionLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ContactPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"ExecutedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RawResponse\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"StepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"StepName\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"Success\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"TrackingLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"TriggeredByButton\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"FlowExecutionLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAManagement.Models.CTADefinition\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"TargetUrl\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CTADefinitions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CampaignType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CtaId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeletedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FollowUpTemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageCaption\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessageBody\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageTemplate\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ScheduledAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"SourceCampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateParameters\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CtaId\");\n\n                    b.HasIndex(\"SourceCampaignId\");\n\n                    b.ToTable(\"Campaigns\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignButton\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"IsFromTemplate\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<int>(\"Position\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Type\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Value\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.ToTable(\"CampaignButtons\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignFlowOverride\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"OverrideNextTemplate\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.ToTable(\"CampaignFlowOverrides\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"BotId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CategoryBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ClickedCTA\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"IsAutoTagged\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessagePreview\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProductBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.ToTable(\"CampaignRecipients\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"AllowRetry\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Browser\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"City\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ClickType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Country\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"DeliveredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeviceInfo\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"DeviceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IpAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsClicked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastRetryAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LastRetryStatus\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MacAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageBody\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"ReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"RecipientId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<int>(\"RetryCount\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"SendStatus\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"SourceChannel\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"MessageLogId\");\n\n                    b.HasIndex(\"RecipientId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"CampaignSendLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Catalog.Models.CatalogClickLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"BotId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAJourney\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CategoryBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CtaId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"LastInteractionType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"PlanSnapshot\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProductBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ProductId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RefMessageId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CatalogClickLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Catalog.Models.Product\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Currency\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageUrl\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"MostClickedCTA\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<decimal>(\"Price\")\n                        .HasColumnType(\"numeric\");\n\n                    b.Property<int>(\"TotalClicks\")\n                        .HasColumnType(\"integer\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Products\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.FeatureAccessModule.Models.FeatureAccess\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasMaxLength(200)\n                        .HasColumnType(\"character varying(200)\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<string>(\"Group\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\", \"FeatureName\")\n                        .IsUnique();\n\n                    b.ToTable(\"FeatureAccess\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.FeatureAccessModule.Models.UserFeatureAccess\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid?>(\"ModifiedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"UserFeatureAccess\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Inbox.Models.ChatSessionState\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"LastUpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Mode\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UpdatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"ChatSessionStates\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Inbox.Models.ContactRead\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"LastReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ContactId\", \"UserId\")\n                        .IsUnique();\n\n                    b.ToTable(\"ContactReads\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.MessageManagement.DTOs.MessageStatusLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Channel\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CustomerProfileName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"DeliveredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int?>(\"ErrorCode\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsSessionOpen\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<long?>(\"MetaTimestamp\")\n                        .HasColumnType(\"bigint\");\n\n                    b.Property<string>(\"RawPayload\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"RecipientNumber\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateCategory\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"MessageStatusLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.PlanManagement.Models.PlanFeatureMatrix\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"PlanName\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"PlanFeatureMatrix\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Tracking.Models.TrackingLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Browser\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"City\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ClickedVia\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ContactPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Country\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"DeviceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"IPAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"LastInteractionType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Referrer\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"SessionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"SourceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"SourceType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"StepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ThreadId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"CampaignSendLogId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"MessageLogId\");\n\n                    b.ToTable(\"TrackingLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Webhooks.Models.FailedWebhookLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FailureType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RawJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SourceModule\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"FailedWebhookLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Webhooks.Models.WebhookSettings\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"AutoCleanupEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastCleanupAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"WebhookSettings\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.xbTimelines.Models.LeadTimeline\", b =>\n                {\n                    b.Property<int>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"integer\");\n\n                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>(\"Id\"));\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTASourceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CTASourceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Category\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Data\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"EventType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsSystemGenerated\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid?>(\"ReferenceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.ToTable(\"LeadTimelines\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int>(\"Plan\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<DateTime>(\"QuotaResetDate\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int>(\"RemainingMessages\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<int>(\"TotalMonthlyQuota\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<decimal>(\"WalletBalance\")\n                        .HasColumnType(\"numeric\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\")\n                        .IsUnique();\n\n                    b.ToTable(\"BusinessPlanInfos\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ApiToken\")\n                        .IsRequired()\n                        .HasMaxLength(1000)\n                        .HasColumnType(\"character varying(1000)\");\n\n                    b.Property<string>(\"ApiUrl\")\n                        .IsRequired()\n                        .HasMaxLength(500)\n                        .HasColumnType(\"character varying(500)\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"PhoneNumberId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SenderDisplayName\")\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"WabaId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"WhatsAppBusinessNumber\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\")\n                        .IsUnique();\n\n                    b.ToTable(\"WhatsAppSettings\");\n                });\n\n            modelBuilder.Entity(\"ContactTag\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany(\"ContactTags\")\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Tag\", \"Tag\")\n                        .WithMany(\"ContactTags\")\n                        .HasForeignKey(\"TagId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"Tag\");\n                });\n\n            modelBuilder.Entity(\"MessageLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"SourceCampaign\")\n                        .WithMany(\"MessageLogs\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"SourceCampaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"Users\")\n                        .HasForeignKey(\"BusinessId\");\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Role\", \"Role\")\n                        .WithMany(\"Users\")\n                        .HasForeignKey(\"RoleId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Role\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.PlanPermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany()\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Plan\", \"Plan\")\n                        .WithMany(\"PlanPermissions\")\n                        .HasForeignKey(\"PlanId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"Plan\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.RolePermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany(\"RolePermissions\")\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Role\", \"Role\")\n                        .WithMany(\"RolePermissions\")\n                        .HasForeignKey(\"RoleId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"Role\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.UserPermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany(\"UserPermissions\")\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", \"User\")\n                        .WithMany(\"UserPermissions\")\n                        .HasForeignKey(\"UserId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"User\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowEdge\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowNode\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.OwnsOne(\"xbytechat.api.Features.AutoReplyBuilder.Models.Position\", \"Position\", b1 =>\n                        {\n                            b1.Property<Guid>(\"AutoReplyFlowNodeId\")\n                                .HasColumnType(\"uuid\");\n\n                            b1.Property<double>(\"X\")\n                                .HasColumnType(\"double precision\");\n\n                            b1.Property<double>(\"Y\")\n                                .HasColumnType(\"double precision\");\n\n                            b1.HasKey(\"AutoReplyFlowNodeId\");\n\n                            b1.ToTable(\"AutoReplyFlowNodes\");\n\n                            b1.WithOwner()\n                                .HasForeignKey(\"AutoReplyFlowNodeId\");\n                        });\n\n                    b.Navigation(\"Flow\");\n\n                    b.Navigation(\"Position\")\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyRule\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\");\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", \"Flow\")\n                        .WithMany(\"Steps\")\n                        .HasForeignKey(\"CTAFlowConfigId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowButtonLink\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", \"Step\")\n                        .WithMany(\"ButtonLinks\")\n                        .HasForeignKey(\"CTAFlowStepId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Step\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"Campaigns\")\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CTAManagement.Models.CTADefinition\", \"Cta\")\n                        .WithMany()\n                        .HasForeignKey(\"CtaId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"SourceCampaign\")\n                        .WithMany()\n                        .HasForeignKey(\"SourceCampaignId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Cta\");\n\n                    b.Navigation(\"SourceCampaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignButton\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"MultiButtons\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Campaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignFlowOverride\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Campaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Restrict)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"Recipients\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"Contact\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"MessageLog\", \"MessageLog\")\n                        .WithMany()\n                        .HasForeignKey(\"MessageLogId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", \"Recipient\")\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"RecipientId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", null)\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"UserId\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"MessageLog\");\n\n                    b.Navigation(\"Recipient\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.MessageManagement.DTOs.MessageStatusLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"BusinessId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"CampaignId\");\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", \"User\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"UserId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"User\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Tracking.Models.TrackingLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", \"CampaignSendLog\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignSendLogId\");\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\");\n\n                    b.HasOne(\"MessageLog\", \"MessageLog\")\n                        .WithMany()\n                        .HasForeignKey(\"MessageLogId\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"CampaignSendLog\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"MessageLog\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.xbTimelines.Models.LeadTimeline\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Contact\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithOne(\"BusinessPlanInfo\")\n                        .HasForeignKey(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", \"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", null)\n                        .WithOne(\"WhatsAppSettings\")\n                        .HasForeignKey(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", \"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"SendLogs\");\n\n                    b.Navigation(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.Navigation(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Tag\", b =>\n                {\n                    b.Navigation(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Permission\", b =>\n                {\n                    b.Navigation(\"RolePermissions\");\n\n                    b.Navigation(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Plan\", b =>\n                {\n                    b.Navigation(\"PlanPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Role\", b =>\n                {\n                    b.Navigation(\"RolePermissions\");\n\n                    b.Navigation(\"Users\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.BusinessModule.Models.Business\", b =>\n                {\n                    b.Navigation(\"BusinessPlanInfo\");\n\n                    b.Navigation(\"Campaigns\");\n\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"Users\");\n\n                    b.Navigation(\"WhatsAppSettings\")\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", b =>\n                {\n                    b.Navigation(\"Steps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.Navigation(\"ButtonLinks\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.Navigation(\"MessageLogs\");\n\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"MultiButtons\");\n\n                    b.Navigation(\"Recipients\");\n\n                    b.Navigation(\"SendLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.Navigation(\"SendLogs\");\n                });\n#pragma warning restore 612, 618\n        }\n    }\n}\n"
    },
    {
      "path": "xbytechat-api/Migrations/20250622062351_AddFeatureMasterTable.cs",
      "sha256": "30dc91ef63aed3159b2f601d4197e1313317b0a35d0d2cb3076fc138078fd469",
      "language": "csharp",
      "size": 27172,
      "content": "using System;\nusing Microsoft.EntityFrameworkCore.Migrations;\n\n#nullable disable\n\n#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional\n\nnamespace xbytechat.api.Migrations\n{\n    /// <inheritdoc />\n    public partial class AddFeatureMasterTable : Migration\n    {\n        /// <inheritdoc />\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"0574c0c9-3f81-428d-af3a-d2a90fb35b8e\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"08344dd6-c032-4918-a5ed-145f085617e0\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"2dc90489-89ac-4877-b0df-869a7bf893ed\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"3313278a-881c-4bb0-932f-adb0ef4f960e\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"389c40b7-c1a8-4933-9b22-7a13099641e6\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"3f057e7a-e29b-4ca9-932b-6f5700c26eda\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"623c923e-ed8a-40e1-bdf2-75beadd7c3fd\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"6fd53fe6-6790-4c93-9193-e40732e38797\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"76b5616e-cf3f-4a28-b434-a75380fa86a5\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"7eae3e11-c8fb-4870-a688-1eb0b69f3fe6\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"90235fca-ea3a-4d87-9843-8120d6a248aa\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"a3ff4e6d-c3db-47d0-8d5a-dc05a868bd21\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"b5fa27ec-9cba-4d9e-9e7b-1914c6a1be5c\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"b60da824-36e3-40c6-9dcc-254786b056d7\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"c7ceb1c9-1bcf-41fc-8be3-5bb894ecd502\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"f50a2419-dcfa-42e1-9b5f-feed5cb19d55\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"fc083ff6-22d7-45ff-a2ea-db995bf3634e\"));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3162));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3176));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3183));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3189));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3195));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3317));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3323));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3328));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3334));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3353));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3359));\n\n            migrationBuilder.InsertData(\n                table: \"RolePermissions\",\n                columns: new[] { \"Id\", \"AssignedAt\", \"AssignedBy\", \"IsActive\", \"IsRevoked\", \"PermissionId\", \"RoleId\" },\n                values: new object[,]\n                {\n                    { new Guid(\"06eeda5f-6a80-43f6-ad18-0ffa7de3b82d\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4016), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000006\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"1d69a371-aa3a-4c5c-8f89-854b77861a08\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3988), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"1f98a6c6-dfa6-4199-b997-9a88a3592f93\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3935), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"2647805a-3461-4fd0-9dc4-2b73e06ab436\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4103), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"31077fc3-8326-4a70-88e5-d02f4909b523\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3975), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000003\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"351db354-aa0a-4250-ab44-9c1ca3df05d4\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4047), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000010\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"410a4982-9970-411e-9fcd-a10403a66018\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4127), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"4f4dfc5f-13db-4287-bc1d-4800e5d08fe7\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4039), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000009\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"5a665b77-9472-41fc-87af-75a7c1718a3e\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4023), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"84e7384c-5e71-4c66-9d29-97c299d806b8\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4066), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"aeab94b3-1bb2-470b-868d-8f25c69fce36\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4119), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"aedf4756-e1d0-4c34-bd96-dc58bff5e0a0\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3967), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000002\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"c3855b1f-c41e-4807-bf68-1bbc24414225\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4073), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"c65530da-5647-4dcb-b556-91b548ed188f\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4085), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"e71628db-a572-49ae-8898-695d0c7c6b22\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3959), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"e89d8afd-00bd-4450-88d8-1ffbaf616163\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4009), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000005\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"eaca9399-e841-42eb-806c-e94fca09d80d\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4031), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000008\"), new Guid(\"00000000-0000-0000-0000-000000000001\") }\n                });\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2073));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2077));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2079));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2081));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2084));\n        }\n\n        /// <inheritdoc />\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"06eeda5f-6a80-43f6-ad18-0ffa7de3b82d\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"1d69a371-aa3a-4c5c-8f89-854b77861a08\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"1f98a6c6-dfa6-4199-b997-9a88a3592f93\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"2647805a-3461-4fd0-9dc4-2b73e06ab436\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"31077fc3-8326-4a70-88e5-d02f4909b523\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"351db354-aa0a-4250-ab44-9c1ca3df05d4\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"410a4982-9970-411e-9fcd-a10403a66018\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"4f4dfc5f-13db-4287-bc1d-4800e5d08fe7\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"5a665b77-9472-41fc-87af-75a7c1718a3e\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"84e7384c-5e71-4c66-9d29-97c299d806b8\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"aeab94b3-1bb2-470b-868d-8f25c69fce36\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"aedf4756-e1d0-4c34-bd96-dc58bff5e0a0\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"c3855b1f-c41e-4807-bf68-1bbc24414225\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"c65530da-5647-4dcb-b556-91b548ed188f\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"e71628db-a572-49ae-8898-695d0c7c6b22\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"e89d8afd-00bd-4450-88d8-1ffbaf616163\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"eaca9399-e841-42eb-806c-e94fca09d80d\"));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9532));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9542));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9545));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9547));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9550));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9554));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9609));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9612));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9616));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9629));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(9631));\n\n            migrationBuilder.InsertData(\n                table: \"RolePermissions\",\n                columns: new[] { \"Id\", \"AssignedAt\", \"AssignedBy\", \"IsActive\", \"IsRevoked\", \"PermissionId\", \"RoleId\" },\n                values: new object[,]\n                {\n                    { new Guid(\"0574c0c9-3f81-428d-af3a-d2a90fb35b8e\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(111), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"08344dd6-c032-4918-a5ed-145f085617e0\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(101), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"2dc90489-89ac-4877-b0df-869a7bf893ed\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(31), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"3313278a-881c-4bb0-932f-adb0ef4f960e\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(106), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"389c40b7-c1a8-4933-9b22-7a13099641e6\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(134), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"3f057e7a-e29b-4ca9-932b-6f5700c26eda\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(85), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000009\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"623c923e-ed8a-40e1-bdf2-75beadd7c3fd\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(77), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"6fd53fe6-6790-4c93-9193-e40732e38797\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(137), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"76b5616e-cf3f-4a28-b434-a75380fa86a5\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(89), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000010\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"7eae3e11-c8fb-4870-a688-1eb0b69f3fe6\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(52), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"90235fca-ea3a-4d87-9843-8120d6a248aa\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(56), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000005\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"a3ff4e6d-c3db-47d0-8d5a-dc05a868bd21\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(23), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"b5fa27ec-9cba-4d9e-9e7b-1914c6a1be5c\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(35), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000002\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"b60da824-36e3-40c6-9dcc-254786b056d7\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(73), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000006\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"c7ceb1c9-1bcf-41fc-8be3-5bb894ecd502\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(126), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"f50a2419-dcfa-42e1-9b5f-feed5cb19d55\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(39), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000003\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"fc083ff6-22d7-45ff-a2ea-db995bf3634e\"), new DateTime(2025, 6, 21, 7, 36, 11, 863, DateTimeKind.Utc).AddTicks(81), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000008\"), new Guid(\"00000000-0000-0000-0000-000000000001\") }\n                });\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8739));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8742));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8744));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8745));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 21, 7, 36, 11, 862, DateTimeKind.Utc).AddTicks(8747));\n        }\n    }\n}\n"
    },
    {
      "path": "xbytechat-api/Migrations/20250622062351_AddFeatureMasterTable.Designer.cs",
      "sha256": "eb50fe2b8e9ada145b09111e222e0ab73671be87f94f403a093c10b4aa39fd2d",
      "language": "csharp",
      "size": 108504,
      "content": "// <auto-generated />\nusing System;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Migrations;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\nusing Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;\nusing xbytechat.api;\n\n#nullable disable\n\nnamespace xbytechat.api.Migrations\n{\n    [DbContext(typeof(AppDbContext))]\n    [Migration(\"20250622062351_AddFeatureMasterTable\")]\n    partial class AddFeatureMasterTable\n    {\n        /// <inheritdoc />\n        protected override void BuildTargetModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder\n                .HasAnnotation(\"ProductVersion\", \"8.0.15\")\n                .HasAnnotation(\"Relational:MaxIdentifierLength\", 63);\n\n            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);\n\n            modelBuilder.Entity(\"ContactTag\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"TagId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"TagId\");\n\n                    b.ToTable(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"MessageLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTAFlowStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsIncoming\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MediaUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageContent\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RawResponse\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RecipientNumber\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"RefMessageId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RenderedBody\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.ToTable(\"MessageLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Email\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"PasswordHash\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RefreshToken\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"RefreshTokenExpiry\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"RoleId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"RoleId\");\n\n                    b.ToTable(\"Users\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"AssignedAgentId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Email\")\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<string>(\"Group\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsArchived\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsAutomationPaused\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsFavorite\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastCTAInteraction\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LastCTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"LastClickedProductId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"LastContactedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LeadSource\")\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<DateTime?>(\"NextFollowUpAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasMaxLength(500)\n                        .HasColumnType(\"character varying(500)\");\n\n                    b.Property<string>(\"PhoneNumber\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.Property<string>(\"Tags\")\n                        .HasMaxLength(200)\n                        .HasColumnType(\"character varying(200)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.ToTable(\"Contacts\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Note\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Content\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"EditedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsInternal\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsPinned\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Notes\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Reminder\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"CompletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"DueAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRecurring\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"LastCTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"LastClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LinkedCampaign\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int?>(\"Priority\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"RecurrencePattern\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ReminderType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"SendWhatsappNotification\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Reminders\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Tag\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Category\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ColorHex\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsSystemTag\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastUsedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Tags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Permission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Code\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Group\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Permissions\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            Code = \"dashboard.view\",\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3162),\n                            Description = \"Permission for dashboard.view\",\n                            IsActive = true,\n                            Name = \"dashboard.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                            Code = \"campaign.view\",\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3176),\n                            Description = \"Permission for campaign.view\",\n                            IsActive = true,\n                            Name = \"campaign.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                            Code = \"campaign.create\",\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3183),\n                            Description = \"Permission for campaign.create\",\n                            IsActive = true,\n                            Name = \"campaign.create\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                            Code = \"campaign.delete\",\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3189),\n                            Description = \"Permission for campaign.delete\",\n                            IsActive = true,\n                            Name = \"campaign.delete\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                            Code = \"product.view\",\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3195),\n                            Description = \"Permission for product.view\",\n                            IsActive = true,\n                            Name = \"product.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                            Code = \"product.create\",\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3317),\n                            Description = \"Permission for product.create\",\n                            IsActive = true,\n                            Name = \"product.create\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                            Code = \"product.delete\",\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3323),\n                            Description = \"Permission for product.delete\",\n                            IsActive = true,\n                            Name = \"product.delete\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            Code = \"contacts.view\",\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3328),\n                            Description = \"Permission for contacts.view\",\n                            IsActive = true,\n                            Name = \"contacts.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                            Code = \"tags.edit\",\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3334),\n                            Description = \"Permission for tags.edit\",\n                            IsActive = true,\n                            Name = \"tags.edit\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                            Code = \"admin.business.approve\",\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3353),\n                            Description = \"Permission for admin.business.approve\",\n                            IsActive = true,\n                            Name = \"admin.business.approve\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                            Code = \"admin.logs.view\",\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3359),\n                            Description = \"Permission for admin.logs.view\",\n                            IsActive = true,\n                            Name = \"admin.logs.view\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Plan\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Code\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Plans\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.PlanPermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"PlanId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"PlanId\");\n\n                    b.ToTable(\"PlanPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Role\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsSystemDefined\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Roles\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2073),\n                            Description = \"Super Admin\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"admin\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000002\"),\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2077),\n                            Description = \"Business Partner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"partner\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000003\"),\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2079),\n                            Description = \"Reseller Partner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"reseller\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000004\"),\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2081),\n                            Description = \"Business Owner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"business\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000005\"),\n                            CreatedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2084),\n                            Description = \"Staff\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"staff\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.RolePermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRevoked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"RoleId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"RoleId\");\n\n                    b.ToTable(\"RolePermissions\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"1f98a6c6-dfa6-4199-b997-9a88a3592f93\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3935),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"e71628db-a572-49ae-8898-695d0c7c6b22\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3959),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"aedf4756-e1d0-4c34-bd96-dc58bff5e0a0\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3967),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"31077fc3-8326-4a70-88e5-d02f4909b523\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3975),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"1d69a371-aa3a-4c5c-8f89-854b77861a08\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3988),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"e89d8afd-00bd-4450-88d8-1ffbaf616163\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4009),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"06eeda5f-6a80-43f6-ad18-0ffa7de3b82d\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4016),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"5a665b77-9472-41fc-87af-75a7c1718a3e\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4023),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"eaca9399-e841-42eb-806c-e94fca09d80d\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4031),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"4f4dfc5f-13db-4287-bc1d-4800e5d08fe7\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4039),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"351db354-aa0a-4250-ab44-9c1ca3df05d4\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4047),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"84e7384c-5e71-4c66-9d29-97c299d806b8\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4066),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"c3855b1f-c41e-4807-bf68-1bbc24414225\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4073),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"c65530da-5647-4dcb-b556-91b548ed188f\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4085),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"2647805a-3461-4fd0-9dc4-2b73e06ab436\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4103),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000004\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"aeab94b3-1bb2-470b-868d-8f25c69fce36\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4119),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000005\")\n                        },\n                        new\n                        {\n                            Id = new Guid(\"410a4982-9970-411e-9fcd-a10403a66018\"),\n                            AssignedAt = new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4127),\n                            IsActive = true,\n                            IsRevoked = false,\n                            PermissionId = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000005\")\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.UserPermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsGranted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRevoked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AuditTrail.Models.AuditLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ActionType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IPAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Location\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"PerformedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"PerformedByUserName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RoleAtTime\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserAgent\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AuditLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"EdgesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AutoReplyFlows\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowEdge\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"SourceHandle\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SourceNodeId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TargetHandle\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TargetNodeId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyFlowEdges\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowNode\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ConfigJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Label\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodeType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Order\")\n                        .HasColumnType(\"integer\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyFlowNodes\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FlowName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ReplyContent\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"TriggeredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AutoReplyLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyRule\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FlowName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MediaUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Priority\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"ReplyMessage\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyRules\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.BusinessModule.Models.Business\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Address\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ApprovedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ApprovedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"BusinessEmail\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"BusinessName\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CompanyName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CompanyPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CreatedByPartnerId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeletedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Industry\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsApproved\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastLoginAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LogoUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Phone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RepresentativeName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Status\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Tags\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Website\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Businesses\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FlowName\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsPublished\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CTAFlowConfigs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<float?>(\"PositionX\")\n                        .HasColumnType(\"real\");\n\n                    b.Property<float?>(\"PositionY\")\n                        .HasColumnType(\"real\");\n\n                    b.Property<string>(\"RequiredSource\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RequiredTag\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"StepOrder\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"TemplateToSend\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CTAFlowConfigId\");\n\n                    b.ToTable(\"CTAFlowSteps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowButtonLink\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonSubType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonValue\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"CTAFlowStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"NextStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CTAFlowStepId\");\n\n                    b.ToTable(\"FlowButtonLinks\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowExecutionLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ContactPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"ExecutedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RawResponse\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"StepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"StepName\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"Success\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"TrackingLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"TriggeredByButton\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"FlowExecutionLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAManagement.Models.CTADefinition\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"TargetUrl\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CTADefinitions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CampaignType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CtaId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeletedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FollowUpTemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageCaption\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessageBody\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageTemplate\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ScheduledAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"SourceCampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateParameters\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CtaId\");\n\n                    b.HasIndex(\"SourceCampaignId\");\n\n                    b.ToTable(\"Campaigns\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignButton\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"IsFromTemplate\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<int>(\"Position\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Type\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Value\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.ToTable(\"CampaignButtons\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignFlowOverride\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"OverrideNextTemplate\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.ToTable(\"CampaignFlowOverrides\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"BotId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CategoryBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ClickedCTA\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"IsAutoTagged\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessagePreview\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProductBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.ToTable(\"CampaignRecipients\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"AllowRetry\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Browser\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"City\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ClickType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Country\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"DeliveredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeviceInfo\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"DeviceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IpAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsClicked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastRetryAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LastRetryStatus\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MacAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageBody\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"ReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"RecipientId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<int>(\"RetryCount\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"SendStatus\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"SourceChannel\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"MessageLogId\");\n\n                    b.HasIndex(\"RecipientId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"CampaignSendLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Catalog.Models.CatalogClickLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"BotId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAJourney\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CategoryBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CtaId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"LastInteractionType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"PlanSnapshot\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProductBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ProductId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RefMessageId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CatalogClickLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Catalog.Models.Product\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Currency\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageUrl\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"MostClickedCTA\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<decimal>(\"Price\")\n                        .HasColumnType(\"numeric\");\n\n                    b.Property<int>(\"TotalClicks\")\n                        .HasColumnType(\"integer\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Products\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.FeatureAccessModule.Models.FeatureAccess\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasMaxLength(200)\n                        .HasColumnType(\"character varying(200)\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<string>(\"Group\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\", \"FeatureName\")\n                        .IsUnique();\n\n                    b.ToTable(\"FeatureAccess\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.FeatureAccessModule.Models.UserFeatureAccess\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid?>(\"ModifiedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"UserFeatureAccess\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Inbox.Models.ChatSessionState\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"LastUpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Mode\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UpdatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"ChatSessionStates\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Inbox.Models.ContactRead\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"LastReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ContactId\", \"UserId\")\n                        .IsUnique();\n\n                    b.ToTable(\"ContactReads\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.MessageManagement.DTOs.MessageStatusLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Channel\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CustomerProfileName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"DeliveredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int?>(\"ErrorCode\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsSessionOpen\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<long?>(\"MetaTimestamp\")\n                        .HasColumnType(\"bigint\");\n\n                    b.Property<string>(\"RawPayload\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"RecipientNumber\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateCategory\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"MessageStatusLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.PlanManagement.Models.PlanFeatureMatrix\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"PlanName\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"PlanFeatureMatrix\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Tracking.Models.TrackingLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Browser\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"City\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ClickedVia\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ContactPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Country\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"DeviceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"IPAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"LastInteractionType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Referrer\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"SessionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"SourceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"SourceType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"StepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ThreadId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"CampaignSendLogId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"MessageLogId\");\n\n                    b.ToTable(\"TrackingLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Webhooks.Models.FailedWebhookLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FailureType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RawJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SourceModule\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"FailedWebhookLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Webhooks.Models.WebhookSettings\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"AutoCleanupEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastCleanupAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"WebhookSettings\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.xbTimelines.Models.LeadTimeline\", b =>\n                {\n                    b.Property<int>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"integer\");\n\n                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>(\"Id\"));\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTASourceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CTASourceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Category\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Data\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"EventType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsSystemGenerated\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid?>(\"ReferenceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.ToTable(\"LeadTimelines\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int>(\"Plan\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<DateTime>(\"QuotaResetDate\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int>(\"RemainingMessages\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<int>(\"TotalMonthlyQuota\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<decimal>(\"WalletBalance\")\n                        .HasColumnType(\"numeric\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\")\n                        .IsUnique();\n\n                    b.ToTable(\"BusinessPlanInfos\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ApiToken\")\n                        .IsRequired()\n                        .HasMaxLength(1000)\n                        .HasColumnType(\"character varying(1000)\");\n\n                    b.Property<string>(\"ApiUrl\")\n                        .IsRequired()\n                        .HasMaxLength(500)\n                        .HasColumnType(\"character varying(500)\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"PhoneNumberId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SenderDisplayName\")\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"WabaId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"WhatsAppBusinessNumber\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\")\n                        .IsUnique();\n\n                    b.ToTable(\"WhatsAppSettings\");\n                });\n\n            modelBuilder.Entity(\"ContactTag\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany(\"ContactTags\")\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Tag\", \"Tag\")\n                        .WithMany(\"ContactTags\")\n                        .HasForeignKey(\"TagId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"Tag\");\n                });\n\n            modelBuilder.Entity(\"MessageLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"SourceCampaign\")\n                        .WithMany(\"MessageLogs\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"SourceCampaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"Users\")\n                        .HasForeignKey(\"BusinessId\");\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Role\", \"Role\")\n                        .WithMany(\"Users\")\n                        .HasForeignKey(\"RoleId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Role\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.PlanPermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany()\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Plan\", \"Plan\")\n                        .WithMany(\"PlanPermissions\")\n                        .HasForeignKey(\"PlanId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"Plan\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.RolePermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany(\"RolePermissions\")\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Role\", \"Role\")\n                        .WithMany(\"RolePermissions\")\n                        .HasForeignKey(\"RoleId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"Role\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.UserPermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany(\"UserPermissions\")\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", \"User\")\n                        .WithMany(\"UserPermissions\")\n                        .HasForeignKey(\"UserId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"User\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowEdge\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowNode\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.OwnsOne(\"xbytechat.api.Features.AutoReplyBuilder.Models.Position\", \"Position\", b1 =>\n                        {\n                            b1.Property<Guid>(\"AutoReplyFlowNodeId\")\n                                .HasColumnType(\"uuid\");\n\n                            b1.Property<double>(\"X\")\n                                .HasColumnType(\"double precision\");\n\n                            b1.Property<double>(\"Y\")\n                                .HasColumnType(\"double precision\");\n\n                            b1.HasKey(\"AutoReplyFlowNodeId\");\n\n                            b1.ToTable(\"AutoReplyFlowNodes\");\n\n                            b1.WithOwner()\n                                .HasForeignKey(\"AutoReplyFlowNodeId\");\n                        });\n\n                    b.Navigation(\"Flow\");\n\n                    b.Navigation(\"Position\")\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyRule\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\");\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", \"Flow\")\n                        .WithMany(\"Steps\")\n                        .HasForeignKey(\"CTAFlowConfigId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowButtonLink\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", \"Step\")\n                        .WithMany(\"ButtonLinks\")\n                        .HasForeignKey(\"CTAFlowStepId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Step\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"Campaigns\")\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CTAManagement.Models.CTADefinition\", \"Cta\")\n                        .WithMany()\n                        .HasForeignKey(\"CtaId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"SourceCampaign\")\n                        .WithMany()\n                        .HasForeignKey(\"SourceCampaignId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Cta\");\n\n                    b.Navigation(\"SourceCampaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignButton\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"MultiButtons\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Campaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignFlowOverride\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Campaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Restrict)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"Recipients\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"Contact\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"MessageLog\", \"MessageLog\")\n                        .WithMany()\n                        .HasForeignKey(\"MessageLogId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", \"Recipient\")\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"RecipientId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", null)\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"UserId\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"MessageLog\");\n\n                    b.Navigation(\"Recipient\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.MessageManagement.DTOs.MessageStatusLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"BusinessId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"CampaignId\");\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", \"User\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"UserId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"User\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Tracking.Models.TrackingLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", \"CampaignSendLog\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignSendLogId\");\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\");\n\n                    b.HasOne(\"MessageLog\", \"MessageLog\")\n                        .WithMany()\n                        .HasForeignKey(\"MessageLogId\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"CampaignSendLog\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"MessageLog\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.xbTimelines.Models.LeadTimeline\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Contact\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithOne(\"BusinessPlanInfo\")\n                        .HasForeignKey(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", \"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", null)\n                        .WithOne(\"WhatsAppSettings\")\n                        .HasForeignKey(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", \"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"SendLogs\");\n\n                    b.Navigation(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.Navigation(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Tag\", b =>\n                {\n                    b.Navigation(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Permission\", b =>\n                {\n                    b.Navigation(\"RolePermissions\");\n\n                    b.Navigation(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Plan\", b =>\n                {\n                    b.Navigation(\"PlanPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Role\", b =>\n                {\n                    b.Navigation(\"RolePermissions\");\n\n                    b.Navigation(\"Users\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.BusinessModule.Models.Business\", b =>\n                {\n                    b.Navigation(\"BusinessPlanInfo\");\n\n                    b.Navigation(\"Campaigns\");\n\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"Users\");\n\n                    b.Navigation(\"WhatsAppSettings\")\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", b =>\n                {\n                    b.Navigation(\"Steps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.Navigation(\"ButtonLinks\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.Navigation(\"MessageLogs\");\n\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"MultiButtons\");\n\n                    b.Navigation(\"Recipients\");\n\n                    b.Navigation(\"SendLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.Navigation(\"SendLogs\");\n                });\n#pragma warning restore 612, 618\n        }\n    }\n}\n"
    },
    {
      "path": "xbytechat-api/Migrations/20250622070448_AddFeatureMasterTable1.cs",
      "sha256": "ba6e08ea0f83d3c2e9a29f4d014397fe5f7af02b32990f80ca4d318b7bc74f34",
      "language": "csharp",
      "size": 28504,
      "content": "using System;\nusing Microsoft.EntityFrameworkCore.Migrations;\n\n#nullable disable\n\n#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional\n\nnamespace xbytechat.api.Migrations\n{\n    /// <inheritdoc />\n    public partial class AddFeatureMasterTable1 : Migration\n    {\n        /// <inheritdoc />\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"06eeda5f-6a80-43f6-ad18-0ffa7de3b82d\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"1d69a371-aa3a-4c5c-8f89-854b77861a08\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"1f98a6c6-dfa6-4199-b997-9a88a3592f93\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"2647805a-3461-4fd0-9dc4-2b73e06ab436\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"31077fc3-8326-4a70-88e5-d02f4909b523\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"351db354-aa0a-4250-ab44-9c1ca3df05d4\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"410a4982-9970-411e-9fcd-a10403a66018\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"4f4dfc5f-13db-4287-bc1d-4800e5d08fe7\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"5a665b77-9472-41fc-87af-75a7c1718a3e\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"84e7384c-5e71-4c66-9d29-97c299d806b8\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"aeab94b3-1bb2-470b-868d-8f25c69fce36\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"aedf4756-e1d0-4c34-bd96-dc58bff5e0a0\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"c3855b1f-c41e-4807-bf68-1bbc24414225\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"c65530da-5647-4dcb-b556-91b548ed188f\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"e71628db-a572-49ae-8898-695d0c7c6b22\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"e89d8afd-00bd-4450-88d8-1ffbaf616163\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"eaca9399-e841-42eb-806c-e94fca09d80d\"));\n\n            migrationBuilder.AddColumn<string>(\n                name: \"Plan\",\n                table: \"FeatureAccess\",\n                type: \"text\",\n                nullable: true);\n\n            migrationBuilder.CreateTable(\n                name: \"FeatureMaster\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    FeatureCode = table.Column<string>(type: \"character varying(100)\", maxLength: 100, nullable: false),\n                    DisplayName = table.Column<string>(type: \"character varying(100)\", maxLength: 100, nullable: false),\n                    Description = table.Column<string>(type: \"character varying(250)\", maxLength: 250, nullable: false),\n                    Group = table.Column<string>(type: \"character varying(50)\", maxLength: 50, nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_FeatureMaster\", x => x.Id);\n                });\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(2832));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(2845));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(2849));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(2852));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(2855));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(2859));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(2862));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(2865));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(2868));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(2991));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(2995));\n\n            migrationBuilder.InsertData(\n                table: \"RolePermissions\",\n                columns: new[] { \"Id\", \"AssignedAt\", \"AssignedBy\", \"IsActive\", \"IsRevoked\", \"PermissionId\", \"RoleId\" },\n                values: new object[,]\n                {\n                    { new Guid(\"1418e3c7-df29-4ae2-aa27-2ef426f1933c\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4384), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"1c5228fa-c7cd-407a-9933-0f09eb3a554f\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4367), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000009\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"1e5a3b00-04aa-49ab-8174-6ddacb25726d\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4405), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"24262200-285e-4aa6-a065-4c5a49ddc8ac\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4389), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"41d4a538-2ca3-4e67-a336-c52b22fb9b0a\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4324), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000002\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"56e48877-6772-4be4-a827-63bc8f5242c2\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4393), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"8bd44ca4-27ea-41d4-835b-8659095ad6c8\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4318), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"a8aea059-6ff2-42ad-a155-219ce78916b3\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4361), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000008\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"a98dfe68-3b7f-4a68-b5a8-8e931896206b\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4349), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000006\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"bb77f0eb-50a9-49b0-9f29-154872e2970d\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4422), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"c574e6a2-495c-41cf-8aa4-5f9760d83baf\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4371), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000010\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"cab676a7-df99-4eaa-bb3d-dfdec1e7ac39\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4344), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000005\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"cf233a37-a64c-4ae2-aeb1-bf5c4bd642e3\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4354), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"d18e4159-67dd-490b-9dd1-fb5685e5073a\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4338), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"dcb05ff3-470d-43d9-8af9-0324c2eba91c\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4415), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"dd3a681f-d5f5-47bb-be92-44f360fce9f7\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4308), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"fadff09e-9b6a-44e6-9e1a-07cc6a9c3722\"), new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(4327), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000003\"), new Guid(\"00000000-0000-0000-0000-000000000001\") }\n                });\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(1619));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(1622));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(1624));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(1626));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 7, 4, 47, 251, DateTimeKind.Utc).AddTicks(1627));\n        }\n\n        /// <inheritdoc />\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DropTable(\n                name: \"FeatureMaster\");\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"1418e3c7-df29-4ae2-aa27-2ef426f1933c\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"1c5228fa-c7cd-407a-9933-0f09eb3a554f\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"1e5a3b00-04aa-49ab-8174-6ddacb25726d\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"24262200-285e-4aa6-a065-4c5a49ddc8ac\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"41d4a538-2ca3-4e67-a336-c52b22fb9b0a\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"56e48877-6772-4be4-a827-63bc8f5242c2\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"8bd44ca4-27ea-41d4-835b-8659095ad6c8\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"a8aea059-6ff2-42ad-a155-219ce78916b3\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"a98dfe68-3b7f-4a68-b5a8-8e931896206b\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"bb77f0eb-50a9-49b0-9f29-154872e2970d\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"c574e6a2-495c-41cf-8aa4-5f9760d83baf\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"cab676a7-df99-4eaa-bb3d-dfdec1e7ac39\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"cf233a37-a64c-4ae2-aeb1-bf5c4bd642e3\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"d18e4159-67dd-490b-9dd1-fb5685e5073a\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"dcb05ff3-470d-43d9-8af9-0324c2eba91c\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"dd3a681f-d5f5-47bb-be92-44f360fce9f7\"));\n\n            migrationBuilder.DeleteData(\n                table: \"RolePermissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"fadff09e-9b6a-44e6-9e1a-07cc6a9c3722\"));\n\n            migrationBuilder.DropColumn(\n                name: \"Plan\",\n                table: \"FeatureAccess\");\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3162));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3176));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3183));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3189));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3195));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3317));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3323));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3328));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3334));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3353));\n\n            migrationBuilder.UpdateData(\n                table: \"Permissions\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3359));\n\n            migrationBuilder.InsertData(\n                table: \"RolePermissions\",\n                columns: new[] { \"Id\", \"AssignedAt\", \"AssignedBy\", \"IsActive\", \"IsRevoked\", \"PermissionId\", \"RoleId\" },\n                values: new object[,]\n                {\n                    { new Guid(\"06eeda5f-6a80-43f6-ad18-0ffa7de3b82d\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4016), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000006\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"1d69a371-aa3a-4c5c-8f89-854b77861a08\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3988), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"1f98a6c6-dfa6-4199-b997-9a88a3592f93\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3935), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"2647805a-3461-4fd0-9dc4-2b73e06ab436\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4103), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000004\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"31077fc3-8326-4a70-88e5-d02f4909b523\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3975), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000003\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"351db354-aa0a-4250-ab44-9c1ca3df05d4\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4047), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000010\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"410a4982-9970-411e-9fcd-a10403a66018\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4127), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"4f4dfc5f-13db-4287-bc1d-4800e5d08fe7\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4039), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000009\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"5a665b77-9472-41fc-87af-75a7c1718a3e\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4023), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"84e7384c-5e71-4c66-9d29-97c299d806b8\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4066), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"aeab94b3-1bb2-470b-868d-8f25c69fce36\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4119), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000000\"), new Guid(\"00000000-0000-0000-0000-000000000005\") },\n                    { new Guid(\"aedf4756-e1d0-4c34-bd96-dc58bff5e0a0\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3967), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000002\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"c3855b1f-c41e-4807-bf68-1bbc24414225\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4073), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"c65530da-5647-4dcb-b556-91b548ed188f\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4085), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000007\"), new Guid(\"00000000-0000-0000-0000-000000000004\") },\n                    { new Guid(\"e71628db-a572-49ae-8898-695d0c7c6b22\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(3959), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000001\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"e89d8afd-00bd-4450-88d8-1ffbaf616163\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4009), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000005\"), new Guid(\"00000000-0000-0000-0000-000000000001\") },\n                    { new Guid(\"eaca9399-e841-42eb-806c-e94fca09d80d\"), new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(4031), null, true, false, new Guid(\"30000000-0000-0000-0000-000000000008\"), new Guid(\"00000000-0000-0000-0000-000000000001\") }\n                });\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2073));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000002\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2077));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000003\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2079));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000004\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2081));\n\n            migrationBuilder.UpdateData(\n                table: \"Roles\",\n                keyColumn: \"Id\",\n                keyValue: new Guid(\"00000000-0000-0000-0000-000000000005\"),\n                column: \"CreatedAt\",\n                value: new DateTime(2025, 6, 22, 6, 23, 49, 975, DateTimeKind.Utc).AddTicks(2084));\n        }\n    }\n}\n"
    }
  ]
}
